Sys.setlocale("LC_CTYPE", "ko_KR.UTF-8");
setwd("C:/Users/USER/Desktop/YKS/ApartmentPrice/Data Preprocessing_R")
result <- distm (c(40.777250, -73.872610), c(40.6895, -74.1745), fun = distHaversine)
library(distm)
install.packages("geosphere")
library(geosphere)
result <- distm (c(40.777250, -73.872610), c(40.6895, -74.1745), fun = distHaversine)
result
library(dplyr)
# 아파트 주소 데이터
apt <- read.csv("../Data/preprocessingData/K_20200422_PrepocessingBasicNonull.csv",  stringsAsFactors = F)
# 대학교 주소 데이터
sub <- read.csv("../Data/preprocessingData/Y_highschool.csv", fileEncoding = "UTF-8", stringsAsFactors = F)
distance <- c()
univer <- c()
for (i in 1:nrow(apt)){
d <- 100000
loc <- ""
for (j in 1:nrow(sub)){
dis <- distm(c(apt$long[i],apt$lat[i]),c(sub$lon[j],sub$lat[j]), fun = distHaversine)
if (dis < d) {
d <- dis
loc <- sub$학교명[j]
print(loc)
}
}
distance <- c(distance,d)
univer <- c(univer,loc)
}
View(apt)
View(sub)
distance <- c()
univer <- c()
for (i in 1:nrow(apt)){
d <- 100000
loc <- ""
for (j in 1:nrow(sub)){
dis <- distm(c(apt$long[i],apt$lat[i]),c(sub$lon[j],sub$lat[j]), fun = distHaversine)
if (dis < d) {
d <- dis
loc <- sub$학교명[j]
print(loc)
}
}
distance <- c(distance,d)
univer <- c(univer,loc)
}
# 37.559712, 126.954597
sub[230,]$lon <- 126.954597
sub[230,]$lat <- 37.559712
for (i in 1:nrow(apt)){
d <- 100000
loc <- ""
for (j in 1:nrow(sub)){
dis <- distm(c(apt$long[i],apt$lat[i]),c(sub$lon[j],sub$lat[j]), fun = distHaversine)
if (dis < d) {
d <- dis
loc <- sub$학교명[j]
print(loc)
}
}
distance <- c(distance,d)
univer <- c(univer,loc)
}
data <- read.csv("../Data/preprocessingData/Y_kindergarten.csv", fileEncoding = "utf-8")
data
sum(is.na(data))
data <- read.csv("../Data/preprocessingData/Y_elementary.csv", fileEncoding = "utf-8")
data
sum(is.na(data))
data <- read.csv("../Data/preprocessingData/Y_middleschool.csv", fileEncoding = "utf-8")
data <- read.csv("../Data/preprocessingData/Y_middleschool.csv", fileEncoding = "utf-8")
data <- read.csv("../Data/preprocessingData/Y_middleschool.csv", fileEncoding = "utf-8")
data <- read.csv("../Data/preprocessingData/Y_middleschool.csv")
data <- read.csv("../Data/preprocessingData/Y_middleschool.csv", fileEncoding = "utf-8", quote="")
install.packages("readr")
library(readr)
data <- read_csv("../Data/preprocessingData/Y_middleschool.csv", fileEncoding = "utf-8", quote="")
data <- read_csv("../Data/preprocessingData/Y_middleschool.csv", quote="")
data
View(data)
View(data)
View(data)
library(devtools)
library(ggmap)
library(xlsx)
# 데이터 불러오기
middle_data <- read.xlsx("../Data/collectData/Y_school.xls", sheetName = "중학교", header = T)
library(devtools)
library(ggmap)
library(xlsx)
library(readxl)
# 데이터 불러오기
academy_data <- readxl::read_excel("../Data/collectData/Y_school.xls", sheet = "중학교")
View(academy_data)
# 중복값 제거
academy_data2 <- unique(academy_data)
View(academy_data2)
# 주소 추출
academy_code <- as.character(academy_data2$주소)
# 주소 추출
academy_code <- as.character(academy_data2$주소)
academy_code
# 구글 API활용 좌표 출력
googleAPIkey <- "AIzaSyDxB5P_GoIqF7KUzM4cRh9KUZbEYjbVfX4"
register_google(googleAPIkey)
academy_code <- geocode(academy_code)
# 결측치 확인 및 수정
sum(is.na(academy_code))
# CSV로 저장
write.csv(academy_data3, "../Data/preprocessingData/Y_middleschool2.csv", row.names = FALSE)
# NA값이 있는 행 찾기 및 제거
academy_data2 <- cbind(academy_data2, academy_code)
academy_data2[!complete.cases(academy_data2), ]
academy_data3 <- na.omit(academy_data2)
sum(is.na(academy_data3))
# CSV로 저장
write.csv(academy_data3, "../Data/preprocessingData/Y_middleschool2.csv", row.names = FALSE)
# 데이터 불러오기
academy_data <- readxl::read_excel("../Data/collectData/Y_school.xls", sheet = "고등학교")
View(academy_data)
# 중복값 제거
academy_data2 <- unique(academy_data)
# 주소 추출
academy_code <- as.character(academy_data2$주소)
academy_code
# 구글 API활용 좌표 출력
googleAPIkey <- "AIzaSyDxB5P_GoIqF7KUzM4cRh9KUZbEYjbVfX4"
register_google(googleAPIkey)
academy_code <- geocode(academy_code)
# 결측치 확인 및 수정
sum(is.na(academy_code))
# NA값이 있는 행 찾기 및 제거
academy_data2 <- cbind(academy_data2, academy_code)
academy_data2[!complete.cases(academy_data2), ]
academy_data2$lon[143,] <- 126.927078
academy_data2$lat[143,] <- 37.584879
academy_data2$lon[143] <- 126.927078
academy_data2$lat[143] <- 37.584879
academy_data3 <- na.omit(academy_data2)
sum(is.na(academy_data3))
# CSV로 저장
write.csv(academy_data3, "../Data/preprocessingData/Y_highschool2.csv", row.names = FALSE)
