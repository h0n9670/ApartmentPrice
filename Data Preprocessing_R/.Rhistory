<<<<<<< HEAD
# 데이터 불러오기
academy_data <- readxl::read_excel("../Data/collectData/Y_academy_관악_성북.xlsx", sheet = "강북구 성북구 학원현황")
# 중복값 제거
academy_data2 <- unique(academy_data)
# 주소 추출
academy_code <- as.character(academy_data2$학원주소)
academy_code
# 구글 API활용 좌표 출력
googleAPIkey <- "AIzaSyDxB5P_GoIqF7KUzM4cRh9KUZbEYjbVfX4"
register_google(googleAPIkey)
academy_code <- geocode(academy_code)
# 결측치 확인 및 수정
sum(is.na(academy_code))
# NA값이 있는 행 찾기 및 제거
academy_data2 <- cbind(academy_data2, academy_code)
academy_data2[!complete.cases(academy_data2), ]
academy_data3 <- na.omit(academy_data2)
sum(is.na(academy_data3))
# CSV로 저장
write.csv(academy_data3, "../Data/preprocessingData/Y_academy_강북구_성북구.csv", row.names = FALSE)
=======
ggplot(mtcars,aes(x=hp,y=mpg,group=as.factor(cyl)))
ggplot(mtcars,aes(x=hp,y=mpg,group=as.factor(cyl)))+geom_bar()
ggplot(mtcars,aes(x=hp,y=mpg,group=as.factor(cyl)))+geom_point()
ggplot(mtcars,aes(x=hp,y=mpg,col=as.factor(cyl)))+geom_point()
ggplot(mtcars,aes(x=hp,y=mpg,col=as.factor(cyl),tooltip=hp))+geom_point()
library(knitr)
library(knitr)
kable(mtcars)
renderTable({
head(mtcars, n = input$rows)
})
```{r}
```{r}
```{r}
library(shiny)
library(shiny)
library(DT)
?renderTable({
head(mtcars, n = input$rows)
})
renderTable({
head(mtcars, n = input$rows)
})
renderTable({
head(mtcars, n = input$rows)
})
library(shiny)
```{r}
renderTable({
head(mtcars, n = input$rows)
})
renderTable({
head(mtcars, n = input$rows)
})
renderTable({
head(mtcars, n = input$rows)
})
renderTable({
head(mtcars, n = input$rows)
})
library(flexdashboard)
library(knitr)
library(shiny)
library(DT)
library(flexdashboard)
library(knitr)
library(shiny)
library(DT)
renderTable({
head(mtcars, n = input$rows)
})
renderTable({
head(mtcars, n = input$rows)
})
renderTable({
head(mtcars, n = input$rows)
})()
renderTable({
head(mtcars, n = mtcars$rows)
})
renderTable({
head(mtcars, n = mtcars$rows)
})()
?DT::datatable(mtcars, options = list(
pageLength = 25,
bPaginate = T
), filter = "top")
# 최종 구매후 기간 recency와 구매한 서적의 수간의 관계 확인
cv <- read.csv("04.07/cust_seg_smpl_280122.csv",header=T)
cv
plot(cv$최종구매후기간,
cv$구매서적수,
main="최종 구매후 기간과 구매한 서적의 수 간의 관계 확인",
xlab="최종구매후기간",
ylab="구매서적수")
head(cv)
names(cs0)
names(cv)
knitr::opts_chunk$set(echo = TRUE)
cv <- read.csv("04.07/cust_seg_smpl_280122.csv",header=T)
cv <- read.csv("04.07/cust_seg_smpl_280122.csv",header=T)
cv
cv <- read.csv("./04.07/cust_seg_smpl_280122.csv",header=T)
cv <- read.csv("04.07/cust_seg_smpl_280122.csv",header=T)
cv <- read.csv("04.07/cust_seg_smpl_280122.csv",header=T)
View(cv)
cv <- read.csv("04.07/cust_seg_smpl_280122.csv",header=T)
cv <- read.csv("cust_seg_smpl_280122.csv",header=T)
cv
plot(cv$최종구매후기간,
cv$구매서적수,
main="최종 구매후 기간과 구매한 서적의 수 간의 관계 확인",
xlab="최종구매후기간",
ylab="구매서적수")
names(cv)
print(count(cv))
print(17)
print(count(cv))
count(cv)
library(plotly)
library(ggplot2)
count(cv)
library(dplyr)
count(cv)
count(cv)
print(17)
plot(ji_recency, ji_book,
main="최종 구매후 기간과 구매한 서적의 수 간의 관계 확인",
xlab="최종구매후기간",
ylab="구매서적수")
# 최종 구매후 기간 recency와 구매한 서적의 수간의 관계 확인
cv <- read.csv("04.07/cust_seg_smpl_280122.csv",header=T)
cv
plot(cv$최종구매후기간,
cv$구매서적수,
main="최종 구매후 기간과 구매한 서적의 수 간의 관계 확인",
xlab="최종구매후기간",
ylab="구매서적수")
# 동일 좌표에 다수의 고객 존재 가능성이 있으므로 이를 처리
ji_recency<- jitter(cv$최종구매후기간)
ji_book <- jitter(cv$구매서적수)
plot(ji_recency, ji_book,
main="최종 구매후 기간과 구매한 서적의 수 간의 관계 확인",
xlab="최종구매후기간",
ylab="구매서적수")
result <- lm(ji_book~ji_recency)
abline(result,lwd=1.5)
cv$서적구매액_gsub <- as.integer(gsub(",", "", cv$서적구매액))
plot(jitter(cv$구매서적수),
jitter(cv$서적구매액_gsub),
main="주로 비싼 책을 샀는지를 파악하기 위해 평균금액을 계산",
xlab="구매서적수",
ylab="서적구매액")
result2 <- lm(jitter(cv$서적구매액_gsub)~jitter(cv$구매서적수))
abline(result2,lwd=1.5,col="blue")
cv$unitprice <- cv$서적구매액_gsub/cv$구매서적수
cv$unitprice
plot(cv$구매서적수,
cv$unitprice,
main="주로 비싼 책을 샀는지를 파악하기 위해 평균금액을 계산",
xlab="평균권당책가격",
ylab="구매서적수",
ylim = c(0,40000),
)
ggplotly(plot1)
plot1 <- ggplot(data = cv, aes(x = 구매서적수, y = unitprice, col = 성별),ylim=c(0,40000)) + geom_point()+ stat_smooth(method='lm')
ggplotly(plot1)
plot1 <- ggplot(data = cv, aes(x = 구매서적수, y = unitprice, col = 성별),ylim=c(0,40000)) + geom_point()+ stat_smooth(method='lm')
ggplotly(plot1)
plot1 <- ggplot(data = cv, aes(x = 구매서적수, y = unitprice, col = 성별),ylim=c(0,40000)) + geom_point()+ stat_smooth(method='lm')
ggplotly(plot1)
plot(cv$구매서적수,
cv$unitprice,
main="주로 비싼 책을 샀는지를 파악하기 위해 평균금액을 계산",
xlab="평균권당책가격",
ylab="구매서적수",
ylim = c(0,40000),
)
result2 <- lm(jitter(cv$서적구매액_gsub)~jitter(cv$구매서적수))
abline(result2,lwd=1.5,col="blue")
plot(jitter(cv$구매서적수),
jitter(cv$서적구매액_gsub),
main="주로 비싼 책을 샀는지를 파악하기 위해 평균금액을 계산",
xlab="구매서적수",
ylab="서적구매액")
result2 <- lm(jitter(cv$서적구매액_gsub)~jitter(cv$구매서적수))
abline(result2,lwd=1.5,col="blue")
cv$기타상품구매액_gsub <- as.integer(gsub(",", "", cv$기타상품구매액))
plot2 <- ggplot(data = cv, aes(x = 구매서적수, y = unitprice, col = 성별, size=기타상품구매액_gsub),ylim=c(0,40000)) + geom_point()+ stat_smooth(method='lm')
ggplotly(plot2)
plot1 <- ggplot(data = cv, aes(x = 구매서적수, y = unitprice, col = 성별),ylim=c(0,40000)) + geom_point()+ stat_smooth(method='lm')
ggplotly(plot1)
cv$기타상품구매액_gsub <- as.integer(gsub(",", "", cv$기타상품구매액))
plot2 <- ggplot(data = cv, aes(x = 구매서적수, y = unitprice, col = 성별, size=기타상품구매액_gsub),ylim=c(0,40000)) + geom_point()+ stat_smooth(method='lm')
ggplotly(plot2)
```{r setup, include=FALSE}
```{r setup, include=FALSE}
cv <- read.csv("bnk05.csv",header=T)
cv <- read.csv("./bnk05.csv",header=T)
cv <- read.csv("../bnk05.csv",header=T)
head(cv)
head(cv)
head(cv)
cv <- read.csv("../bnk05.csv",header=T)
head(cv)
names(cv)
head(cv)
head(cv)
head(cv)
head(cv)
head(cv)
head(cv)
head(cv)
names(cv)
head(cv)
tail(cv)
cv
cv
View(cv)
names(cv)
View(cv)
cv
head(cv)
class(cv)
head(cv)
cv <- read.csv("../bnk05.csv",header=T)
names(cv)
View(cv)
cv
head(cv)
class(cv)
head(cv)
cv$age
head(cv$age)
names(cv)
cv_20_30 <- cv %>% filter(20<=age<40)
cv_20 <- cv %>% filter(20<=age<30)
cv_30 <- cv %>% filter(30<=age<40)
cv_20_30 <- cv %>% filter(20<=age&age<40)
cv_20 <- cv %>% filter(20<=age&age<30)
cv_30 <- cv %>% filter(30<=age&age<40)
library(plotly)
library(ggplot2)
library(dplyr)
ggplot(data=cv_20,aes(x=age))+geom_count()
ggplot(data=cv_20,aes(x=age,y=count(age)))+geom_count()
ggplot(data=cv_20,aes(x=age,y=age)+geom_count()
ggplot(data=cv_20,aes(x=age,y=age))+geom_count()
ggplot(data=cv_20,aes(age,fill=age))+geom_bar()
cv_20
ggplot(data=cv_20,aes(factor(age),fill=factor(age)))+geom_bar()
ggplot(data=cv_20,aes(factor(duration),fill=factor(duration)))+geom_bar()
ggplot(data=cv_20,aes(duration,fill=factor(duration)))+geom_bar()
ggplot(data=cv_20,aes(duration,fill=duration))+geom_bar()
ggplot(data=cv_20,aes(duration,fill=duration))+geom_point()
ggplot(data=cv_20,aes(duration,fill=factor(duration)))+geom_point()
ggplot(data=cv_20,aes(duration,fill=factor(duration)))+geom_bar()
ggplot(data=cv_20,aes(factor(duration),fill=factor(duration)))+geom_bar()
ggplot(data=cv_20,aes(factor(duration),fill=factor(duration)))+geom_histogram()
ggplot(data=cv_20,aes(factor(duration),fill=factor(duration)))+geom_histogram()+stat=count
ggplot(data=cv_20,aes(factor(duration),fill=factor(duration)))+geom_histogram()+stat(count)
ggplot(data=cv_20,aes(factor(duration),fill=factor(duration)),stat=count)+geom_histogram()
ggplot(data=cv_20,aes(factor(duration),fill=factor(duration)),stat="count")+geom_histogram()
ggplot(data=cv_20,aes(factor(duration),fill=factor(duration),stat="count"))+geom_histogram()
ggplot(data=cv_20,aes(factor(duration),fill=factor(duration,stat="count")))+geom_histogram()
ggplot(data=cv_20,aes(factor(duration),fill=factor(duration)))+geom_histogram(stat="count")
?factor
ggplot(data=cv_20,aes(factor(duration),fill=duration))+geom_histogram(stat="count")
ggplot(data=cv_20,aes(duration,fill=duration))+geom_histogram(stat="count")
ggplot(data=cv_20,aes(duration,fill=duration))+geom_point(stat="count")
plot(cv_20,aes(age,balance))+goem_point()
plot(cv_20,aes(age,balance))+geom_point()
plot(data=cv_20,aes(x=age,y=balance))+geom_point()
plot(data=cv_20,aes(x=age,y=balance))+geom_point()
plot(data=cv_20,aes(x=age,y=round(balance)))+geom_point()
plot(data=cv_20,aes(x=age,y=round(balance)))+geom_point()
plot(data=cv_20,aes(x=age,y=round(balance,1)))+geom_point()
plot(data=cv_20,aes(x=age,y=as.integer(round(balance,1))))+geom_point()
plot(data=cv_20,aes(x=age,y=as.integer(round(balance,1))))
as.interger(round(cv$balance,1))
as.integer(round(cv$balance,1))
cv$robalance <- as.integer(round(cv$balance,1))
plot(data=cv_20,aes(x=age,y=robalance))+geom_point()
plot(data=cv_20,aes(x=age,y=abs(robalance)))+geom_point()
plot(data=cv_20,aes(x=age,y=abs(robalance)))+geom_point()
plot(data=cv_20,aes(x=age,y=abs(robalance))+geom_jitter()
plot(data=cv_20,aes(x=age,y=abs(robalance)))+geom_jitter()
plot(data=cv_20,aes(x=age,y=robalance))+geom_jitter()
plot(data=cv_20,aes(x=factor(age),y=robalance))+geom_jitter()
plot(data=cv_20,aes(x=age,y=factor(robalance)))+geom_jitter()
plot(data=cv_20,aes(x=age,y=jitter(robalance)))+geom_jitter()
plot(data=cv_20,aes(x=age,y=jitter(robalance)))+geom_jitter()
plot(data=cv_20,aes(x=age,y=age))+geom_jitter()
plot(data=cv_20,aes(x=age,fill=age))+geom_jitter()
plot(data=cv_20,aes(x=age,fill=robalance))+geom_jitter()
cv_20$balance
abs(cv$balance)
cv$abbal <- abs(cv$balance)
plot(data=cv_20,aes(x=age,y=abbal))+geom_jitter()
cv_20<-mutate(bal=str_replace_all(balance," ",""))
?str_replace_all
library(stringr)
cv_20$balance <- str_replace_all(cv_20$balance," ","")
plot(data=cv_20,aes(x=age,y=abbal))+geom_jitter()
cv_20$balance <- str_replace_all(cv_20$balance,",","")
plot(data=cv_20,aes(x=age,y=abbal))+geom_jitter()
cv <- read.csv("../bnk05.csv",header=T)
names(cv)
head(cv)
cv_20_30 <- cv %>% filter(20<=age&age<40)
cv_20 <- cv %>% filter(20<=age&age<30)
cv_30 <- cv %>% filter(30<=age&age<40)
ggplot(data=cv_20,aes(factor(age),fill=factor(age)))+geom_bar()
cv_20$balance
ggplot(data=cv_20,aes(factor(age),fill=factor(age)))+geom_bar()
ggplot(data=cv_20,aes(duration,fill=duration))+geom_point(stat="count")
plot(data=cv_20,aes(x=age,y=abbal))+geom_jitter()
plot(data=cv_20,aes,pch=19)+geom_jitter()
plot(data=cv_20,aes,pch=19)+geom_point()
plot(data=cv_20,aes(age,balance),pch=19)+geom_point()
plot(data=cv_20,coords(age,balance),pch=19)+geom_point()
plot(data=cv_20,x.coords(age,balance),pch=19)+geom_point()
plot(data=cv_20,aes_all(age,balance),pch=19)+geom_point()
plot(data=cv_20,aes(age,balance),pch=19)+geom_point()
plot(data=cv_20,aes(x=age,y=balance),pch=19)+geom_point()
plot(data=cv_20,aes(x=unlist(age),y=balance),pch=19)+geom_point()
plot(data=cv_20,aes(x=age,y=unlist(balance)),pch=19)+geom_point()
plot(data=cv_20,aes(x=age,y=lapply(balance,as.numeric)),pch=19)+geom_point()
ggplot(data=cv_20,aes(x=age,y=balance),pch=19)+geom_point()
ggplot(data=cv_20,aes(x=factor(age),y=balance),pch=19)+geom_point()
plot(cv_20$age, cv_20$balance)
plot(jitter(cv_20$age), jitter(cv_20$balance), pch=19, col=rgb(0,0,1,0.2))
ggplot(data=cv_20,aes(x=factor(age),y=balance),pch=19)+geom_jitter()
ggplot(data=cv_20,aes(x=factor(age),y=balance),pch=19)+geom_jitter()
ggplot(data=cv_20,aes(x=factor(age),y=balance),pch=19,col="blue")+geom_jitter()
ggplot(data=cv_20,aes(x=factor(age),y=balance,col="blue"),pch=19)+geom_jitter()
ggplot(data=cv_20,aes(x=factor(age),y=balance),pch=19,col(blue))+geom_jitter()
?ggplot
ggplot(data=cv_20,aes(x=factor(age),y=balance),pch=19)+geom_jitter(col=blue)
ggplot(data=cv_20,aes(x=factor(age),y=balance),pch=19)+geom_jitter(col="blue")
ggplot(data=cv_20,aes(x=factor(age),y=balance),pch=19)+geom_point()
cv_20
ggplot(data=cv_20,aes(x=marital,fill=marital))+geom_bar()
ggplot(data=cv_20,aes(x=marital,fill=marital),main="20대 결혼상태 분포")+geom_bar()
ggplot(data=cv_20,aes(x=marital,fill=marital))+geom_bar(main="20대 결혼상태 분포")
ggplot(data=cv_20,aes(x=marital,fill=marital))+geom_bar()+ggtitle("20대 결혼상태 분포")
ggplot(data=cv_20,aes(x=dulation,y=balance),pch=19)+geom_point()
()
ggplot(data=cv_20,aes(x=duration,y=balance))+geom_point()
ggplot(data=cv_20,aes(x=duration,y=balance))+geom_point()+ stat_smooth(method='lm')
ggplot(data=cv_20,aes(x=duration,y=balance, col=marital))+geom_point()+ stat_smooth(method='lm')
ggplot(data=cv_20,aes(x=duration,y=balance, col=marital))+geom_point()
```{r}
```{r}
ggplot(data=cv_20,aes(x=duration,y=balance, col=marital))+geom_point()
ggplot(data=cv_20,aes(x=duration,y=balance, col=marital))+geom_point()+
geom_hline(size=1, col="red", aes(yintercept=median(balance)))+
geom_vline(size=1, col="red", aes(xintercept=median(duration)))
ggplot(data=cv_20,aes(x=loan,y=balance))+geom_box()
ggplot(data=cv_20,aes(x=loan,y=balance))+geom_boxplot()
group_by(cv_20$job)
group_by(job)
summarise(group_by(cv_20,job),median=median(balance))
cv2=summarise(group_by(cv_20,job),median=median(balance))
cv2[job]
cv2[median]
View(cv2)
ggplot(data=cv2,aes(x=job,y=median))+geom_barplot()
ggplot(data=cv2,aes(x=job,y=median))+geom_bar()
ggplot(data=cv2,aes(x=job,y=median))+geom_count()
ggplot(data=cv2,aes(x=job,y=median))+geom_bar()
ggplot(data=cv2,aes(x=job,y=median))+geom_histogram()
ggplot(data=cv2,aes(x=job,y=as.integer(median))+geom_histogram()
ggplot(data=cv2,aes(x=job,y=as.integer(median)))+geom_histogram()
ggplot(data=cv2,aes(x=job,y=as.integer(median)))+geom_bar()
ggplot(data=cv2,aes(x=job,y=median))+geom_bar()
cv2 <- data.frame(cv2)
ggplot(data=cv2,aes(x=job,y=median))+geom_bar()
ggplot(data=cv2,aes(x=job,y=median))+geom_bar()+stat_count()
ggplot(data=cv2,aes(x=job,y=median))+stat_count()
ggplot(data=cv2,aes(x=job,y=median))+geom_bar
ggplot(data=cv2,aes(x=job,y=median))+geom_bar()
ggplot(data=cv2,aes(x=job,fill=median))+geom_bar()
ggplot(data=cv2,aes(x=job,y=median))+geom_bar()
ggplot(data=cv2,aes(x=job,y=factor(median)))+geom_bar()
ggplot(data=cv2,aes(x=job,y=as.numeric(median)))+geom_bar()
ggplot(data=cv2,aes(x=job,fill=as.numeric(median)))+geom_bar()
cv2=summarise(group_by(cv_20,job),mebal=median(balance))
cv2 <- data.frame(cv2)
ggplot(data=cv2,aes(x=job,y=mebel)+geom_bar()
ggplot(data=cv2,aes(x=job,y=mebel))+geom_bar()
ggplot(data=cv2,aes(x=job,y=mebal))+geom_bar()
cv2 <- data.frame(cv2)
ggplot(data=cv2,aes(x=job,y=mebal))+geom_bar()
ggplot(data=cv2,aes(x=job,y=mebal))+geom_bar(stat="identity")
cv2=summarise(group_by(cv_20,job),mebal=median(balance))
ggplot(data=cv2,aes(x=job,y=mebal))+geom_bar(stat="identity")
ggplot(data=cv2,aes(x=job,y=mebal))+geom_bar(stat="identity",col=ifelse(job==student,"blue","gray"))
ggplot(data=cv2,aes(x=job,y=mebal))+geom_bar(stat="identity",col=ifelse(job=student,"blue","gray"))
ggplot(data=cv2,aes(x=job,y=mebal))+geom_bar(stat="identity",col=ifelse(job==student,"blue","gray"))
ggplot(data=cv2,aes(x=job,y=mebal))+geom_bar(stat="identity",col=ifelse(job=="student","blue","gray"))
ggplot(data=cv2,aes(x=job,y=mebal))+geom_bar(stat="identity",col=ifelse(cv2$job=="student","blue","gray"))
ggplot(data=cv2,aes(x=job,y=mebal))+geom_bar(stat="identity",fill=ifelse(cv2$job=="student","blue","gray"))
ggplot(data=cv2,aes(x=job,y=mebal))+geom_bar(stat="identity",fill=ifelse(cv2$job=="student","blue","gray"))
ggplot(data=cv2,aes(x=job,y=mebal))+geom_bar(stat="identity",fill=ifelse(cv2$job=="student","blue","gray"))+
geom_hline(size=1, col="red", aes(yintercept=median(mebal)))
cv3=summarise(group_by(cv,job),mebal=median(balance))
ggplot(data=cv3,aes(x=job,y=mebal))+geom_bar(stat="identity")
cbind(cv2,cv3,by=job)
cbind(cv2,cv3,by='job')
cbind(cv2,cv3,by=cv2$job)
cbind(cv3,cv2,by=cv3$job)
rbind(cv3,cv2,by=cv3$job)
cv4 <- rbind(cv3,cv2,by=cv3$job)
cv4
cv4
View(cv4)
View(cv4)
cv4 <- cbind(cv3,cv2,by=cv3$job)
View(cv4)
cv4 <- cbind(cv3,cv2,by=cv2$job)
cv4 <- cbind(cv3,cv2,by=cv3$job)
cv4 <- cbind(cv2,cv3,by=cv3$job)
count(cv2)
count(cv2)
count(cv3)
View(count(cv2))
View(count(cv3))
cv4 <- cbind(cv3,cv2)
cv4 <- merge(cv3,cv2,by=job)
cv4 <- merge(cv3,cv2,by=cv3$job)
cv4 <- merge(cv3,cv2,by=cv3$job,all.x = T)
cv4 <- merge(cv3,cv2,by='job')
View(cv4)
View(cv3)
cv4 <- rename(cv4,all=merge.x)
cv4 <- rename(cv4,all="merge.x")
cv4 <- rename(cv4,all="mebal.x")
cv4 <- rename(cv4,20s="mebal.y")
cv4 <- rename(cv4,twe="mebal.y")
View(cv4)
ggplot(data=cv3,aes(x=job,y=mebal))+geom_bar(stat="identity")
ggplot(data=cv4,aes(x=job,y=all,twe))+geom_bar()
ggplot(data=cv4,aes(x=job,y=all,twe))+geom_bar(stat="identity")
ggplot(data=cv4,aes(x=job,y=c(all,twe)))+geom_bar(stat="identity")
ggplot(data=cv4,aes(x=job,y=all))+geom_bar(stat="identity")
ggplot(data=cv4,aes(x=job,y=all))+geom_bar(stat="identity")+
ggplot(data=cv4,aes(x=job,y=twe))+geom_bar(stat="identity")
cv4 %>%
ggplot(data=cv4,aes(x=job,y=all))+geom_histogram(stat="identity")
ggplot(data=cv4,aes(x=job,y=all))+geom_histogram(stat="identity")
ggplot(data=cv4,aes(x=job,y=all,y=two))+geom_histogram(stat="identity")
cv4 %>%
gather("Stat","Value",-job) %>%
ggplot(data=cv4,aes(x=job,y=Valuem fill = Stat))+geom_histogram(stat="identity")
cv4 %>%
gather("Stat","Value",-job) %>%
ggplot(data=cv4,aes(x=job,y=Value, fill = Stat))+geom_histogram(stat="identity")
library(tidyr)
cv4 %>%
gather("Stat","Value",-job) %>%
ggplot(data=cv4,aes(x=job,y=Value, fill = Stat))+geom_histogram(stat="identity")
cv4 %>%
gather("Stat","Value",-job) %>%
ggplot(data=cv4,aes_(x=job,y=Value, fill = Stat))+geom_histogram(stat="identity")
cv4 %>%
gather("Stat","Value",-job) %>%
ggplot(data=cv4,aes(x=job,y=Value, fill = Stat))+geom_col(stat="identity", position = dodge)
cv4 %>%
gather("Stat","Value",-job) %>%
ggplot(cv4,aes(x=job,y=Value, fill = Stat))+geom_col(stat="identity", position = dodge)
ggplot(cv5,aes(x=job,y=Value, fill = Stat))+geom_col(stat="identity", position = dodge)
View(count(cv2))
View(count(cv3))
cv4 <- merge(cv3,cv2,by='job')
cv4 <- rename(cv4,all="mebal.x")
cv4 <- rename(cv4,twe="mebal.y")
cv5<- cv4 %>%
gather("Stat","Value",-job)
ggplot(cv5,aes(x=job,y=Value, fill = Stat))+geom_col(stat="identity", position = dodge)
cv5<- cv4 %>%
gather("Stat","Value",-job)
ggplot(cv5,aes(x=job,y=Value, fill = Stat))+geom_col(stat="identity", position = dodge)
ggplot(cv5,aes(x=job,y=Value, fill = Stat))+geom_col(stat="identity", position = 'dodge')
ggplot(cv_30,x=age,y=balance)+geom_point()
ggplot(cv_30,aes(x=age,y=balance))+geom_point()
ggplot(cv_30,aes(x=age,y=balance))+geom_jitter()
cv_20 %>% select(age,balance)
cv20<- cv_20 %>% select(age,balance)
cv30 <- cv_30 %>% select(age,balance)
cv6 <- rbind(cv20,cv30)
ggplot(cv6,aes(x=age,y=balance))+geom_jitter()
ggplot(cv6,aes(x=age,y=balance))+geom_jitter(col=ifelse(cv6$age<30,'red','blue'))
cv3=summarise(group_by(cv,job),mebal=sum(job))
cv3=summarise(group_by(cv,job),mebal=table(job))
cv3=summarise(group_by(cv,job),mebal=table(cv$job))
cv3=table(cv$job)
View(cv3)
ggplot(data=cv3,aes(x=Var1,y=Freq))+geom_bar(stat="identity")
cv3=table(cv$job)
View(cv3)
ggplot(data=cv3,aes(x=Var1,y=Freq))+geom_bar()
cv3 <- data.frame(cv3)
ggplot(data=cv3,aes(x=Var1,y=Freq))+geom_bar(stat="identity")
cv2=table(cv_20$job)
cv4 <- merge(cv3,cv2,by='Var1')
cv4 <- merge(cv3,cv2,by='Var1')
cv4 <- rename(cv4,all="Freq.x")
cv4 <- rename(cv4,twe="Freq.y")
cv5<- cv4 %>%
gather("Stat","Value",-job)
ggplot(cv5,aes(x=job,y=Value, fill = Stat))+geom_col(stat="identity", position = 'dodge')
cv5<- cv4 %>%
gather("Stat","Value",-job)
cv5<- cv4 %>%
gather("Stat","Value",-job)
cv5<- cv4 %>%
gather("Stat","Value",-Var1)
ggplot(cv5,aes(x=job,y=Value, fill = Stat))+geom_col(stat="identity", position = 'dodge')
ggplot(cv5,aes(x=job,y=Value, fill = Stat))+geom_col(stat="identity", position = 'dodge')
ggplot(cv5,aes(x=Var1,y=Value, fill = Stat))+geom_col(stat="identity", position = 'dodge')
setwd("C:/ApartmentPrice/Data Preprocessing_R")
install.packages("rgdal")
install.packages("sp")
# 패키지 호출
library(sp)
library(rgdal)
library(dplyr)
# txt 파일을 한 번에 불러들이기 위해 for문 작성
# 데이터를 가져올 폴더 경로 설정 및 확인
dir <- ("C:/ApartmentPrice/Data/collectData");dir
data <- read.delim(paste(dir, K_20200421_entrcSeoul.txt, sep='\\'), sep="|", header=F)
>>>>>>> df536624c3c47c5543842f87c41acdf251d807bd
